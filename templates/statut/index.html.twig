{% extends 'inside.html.twig' %}

{%block title %} Statut index {% endblock %}

{% block main %}
    <h1>Liste des Statuts</h1>

    <a href="{{ path('app_statut_new') }}" class="btn btn-primary mb-3">Create new</a>

    <div class="datatable-form mb-3">
        <div class="row">
            <div class="col-md-6">
                <label for="custom-search" class="form-label">Recherche personnalis√©e:</label>
                <input type="text" id="custom-search" class="form-control" placeholder="Rechercher dans tous les champs">
            </div>
            <div class="col-md-6">
                <label for="column-filter" class="form-label">Filtrer par colonne:</label>
                <select id="column-filter" class="form-select">
                    <option value="">Toutes les colonnes</option>
                    <option value="0">Id</option>
                    <option value="1">Titre</option>
                    <option value="2">Description</option>
                </select>
            </div>
        </div>
    </div>

    <table id="statut-table" class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Titre</th>
                <th>Description</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {% for statut in statuts %}
                <tr>
                    <td>{{ statut.id }}</td>
                    <td>{{ statut.titre }}</td>
                    <td>{{ statut.description }}</td>
                    <td>
                        <a href="{{ path('app_statut_show', {'id': statut.id}) }}" class="btn btn-info btn-sm">Show</a>
                        <a href="{{ path('app_statut_edit', {'id': statut.id}) }}" class="btn btn-warning btn-sm">Edit</a>
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="4">No records found</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    <div class="pagination-controls d-flex justify-content-between align-items-center">
        <div class="pagination-info" id="pagination-info">
            Showing 1 to {{ statuts|length }} of {{ statuts|length }} entries
        </div>
        <nav>
            <ul class="pagination mb-0">
                <li class="page-item disabled" id="prev-page">
                    <a class="page-link" href="#" tabindex="-1">Previous</a>
                </li>
                <li class="page-item active">
                    <a class="page-link" href="#" id="current-page">1</a>
                </li>
                <li class="page-item" id="next-page">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    </div>

<script>
    $(document).ready(function () {
        const itemsPerPage = 10;
        const statuts = [
            {% for statut in statuts %}
                {
                    id: "{{ statut.id }}",
                    titre: "{{ statut.titre }}",
                    description: "{{ statut.description }}"
                }{% if not loop.last %},{% endif %}
            {% endfor %}
        ];
        
        function renderTable(page) {
            const start = (page - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            const pageStatuts = statuts.slice(start, end);

            const tableBody = $('#statut-table tbody');
            tableBody.empty();

            if (pageStatuts.length === 0) {
                tableBody.append('<tr><td colspan="4">No records found</td></tr>');
                return;
            }

            pageStatuts.forEach(statut => {
                tableBody.append(`
                    <tr>
                        <td>${statut.id}</td>
                        <td>${statut.titre}</td>
                        <td>${statut.description}</td>
                        <td>
                            <a href="{{ path('app_statut_show', {'id': 'STATUT_ID'}) }}" class="btn btn-info btn-sm">Show</a>
                            <a href="{{ path('app_statut_edit', {'id': 'STATUT_ID'}) }}" class="btn btn-warning btn-sm">Edit</a>
                        </td>
                    </tr>
                `.replace(/STATUT_ID/g, statut.id));
            });

            updatePaginationControls(page);
        }

        function updatePaginationControls(currentPage) {
            const totalPages = Math.ceil(statuts.length / itemsPerPage);
            
            $('#current-page').text(currentPage);
            $('#pagination-info').text(`Showing ${(currentPage-1)*itemsPerPage + 1} to ${Math.min(currentPage*itemsPerPage, statuts.length)} of ${statuts.length} entries`);
            
            $('#prev-page').toggleClass('disabled', currentPage === 1);
            $('#next-page').toggleClass('disabled', currentPage === totalPages);
        }

        let currentPage = 1;
        renderTable(currentPage);

        $('#next-page').on('click', function(e) {
            e.preventDefault();
            const totalPages = Math.ceil(statuts.length / itemsPerPage);
            if (currentPage < totalPages) {
                currentPage++;
                renderTable(currentPage);
            }
        });

        $('#prev-page').on('click', function(e) {
            e.preventDefault();
            if (currentPage > 1) {
                currentPage--;
                renderTable(currentPage);
            }
        });

        // Custom search
        $('#custom-search').on('keyup', function() {
            const searchTerm = $(this).val().toLowerCase();
            const filteredStatuts = statuts.filter(statut => 
                statut.titre.toLowerCase().includes(searchTerm) ||
                statut.description.toLowerCase().includes(searchTerm) ||
                statut.id.toString().includes(searchTerm)
            );

            currentPage = 1;
            statuts.length = 0;
            statuts.push(...filteredStatuts);
            renderTable(currentPage);
        });

        // Column-specific filter
        $('#column-filter').on('change', function() {
            const columnIndex = $(this).val();
            const searchTerm = $('#custom-search').val().toLowerCase();
            
            const filteredStatuts = statuts.filter(statut => {
                switch(columnIndex) {
                    case '0': return statut.id.toString().includes(searchTerm);
                    case '1': return statut.titre.toLowerCase().includes(searchTerm);
                    case '2': return statut.description.toLowerCase().includes(searchTerm);
                    default: return true;
                }
            });

            currentPage = 1;
            statuts.length = 0;
            statuts.push(...filteredStatuts);
            renderTable(currentPage);
        });
    });
</script>    

{% endblock %}